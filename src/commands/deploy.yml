description: >
      Deploy a new docker container
      << version >> is optional. If absent - will deploy the latest version
      $AWS_ACCOUNT_ID must be set

parameters:
      env:
            description: target environment (i.e, qa, staging, production ...)
            type: string
      project:
            description: your git repository project name
            type: string
      version:
            description: version of the docker image to deploy (Circle CI build num or 'latest')
            type: string

steps:
      - run:
            name: Install aws cli
            command: sudo apt install awscli jq -y
      - run:
            name: Send deploy message to SQS
            command: |
              versiontodeploy="<< parameters.version >>"
                if [ "$versiontodeploy" == "latest" ]; then
                versiontodeploy=$(aws s3 cp s3://$AWS_ACCOUNT_NAME-ops/state/<< parameters.project >>.latest -)
              fi
              aws sqs send-message --region us-east-2 --queue-url https://sqs.us-east-2.amazonaws.com/$AWS_ACCOUNT_ID/<< parameters.env >>-<< parameters.project >>-deploy --message-body $versiontodeploy
      - run:
            name: Wait for deployment status
            command: |
              ACKS=0
              for i in {1..12}; do
                sleep 5
                message=$(aws sqs receive-message --region us-east-2 --max-number-of-messages 1 --queue-url https://sqs.us-east-2.amazonaws.com/$AWS_ACCOUNT_ID/<< parameters.env >>-<< parameters.project >>-deploy-status)
                if [ -n "$message" ]; then
                  echo "Got message in queue"
                  status=$(echo "$message" | jq -r '.Messages[] | .Body')
                  echo "message: $status"
                  if [ "$status" == "ACK" ]; then
                    echo "Got ACK message"
                    receipt=$(echo "$message" | jq -r '.Messages[] | .ReceiptHandle')
                    echo "Deleting ACK message from queue"
                    aws sqs delete-message --region us-east-2 --queue-url https://sqs.us-east-2.amazonaws.com/$AWS_ACCOUNT_ID/<< parameters.env >>-<< parameters.project >>-deploy-status --receipt-handle $receipt
                    echo "ACK message deleted"
                    let ACKS++
                  fi
                fi
              done
              echo "Got $ACKS acks"
              SUCCESS=0
              ITERATION=0
              while [ $SUCCESS -lt $ACKS ] && [ $ITERATION -lt 900 ]; do
                sleep 1
                message=$(aws sqs receive-message --region us-east-2 --max-number-of-messages 1 --queue-url https://sqs.us-east-2.amazonaws.com/$AWS_ACCOUNT_ID/<< parameters.env >>-<< parameters.project >>-deploy-status)
                if [ -n "$message" ]; then
                  status=$(echo "$message" | jq -r '.Messages[] | .Body')
                  echo "Got deploy message: $status"
                  if [ "$status" == "FAILED" ] || [ "$status" == "SUCCESS" ]; then
                    receipt=$(echo "$message" | jq -r '.Messages[] | .ReceiptHandle')
                    aws sqs delete-message --region us-east-2 --queue-url https://sqs.us-east-2.amazonaws.com/$AWS_ACCOUNT_ID/<< parameters.env >>-<< parameters.project >>-deploy-status --receipt-handle $receipt
                    if [ "$status" == "FAILED" ]; then
                      echo "Deploy failed, exiting with status 1"
                      exit 1;
                    fi
                    if [ "$status" == "SUCCESS" ]; then let SUCCESS++; fi
                  fi
                fi
                let ITERATION++
              done
              echo "Deployment Done"
