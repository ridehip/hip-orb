description: >
      Build and deploy a web application to AWS S3 bucket, then invalidate CloudFront cache
      
parameters:
      env:
            description: target environment (i.e, qa, staging, production ...)
            type: string
      project:
            description: your git repository project name
            type: string
      cloudfront_distribution_id:
            description: CloudFront distribution ID
            type: string
      env_hq_api_host:
            description: HQ API host
            type: string
      env_hq_api_key:
            description: HQ API host
            type: string
      env_google_api_key:
            description: Google Maps API key
            type: string
      env_datadog_token:
            description: Datadog API key
            type: string
      env_datadog_site:
            description: Datadog site
            type: string
      env_ccha_host:
            description: CCHA host
            type: string
      env_sg_web: 
            description: Summit Ground web
            type: string

steps:
      - checkout
      - setup_remote_docker:
            docker_layer_caching: true

      - run:
            name: Install aws cli
            command: |
                  sudo apt-get update
                  sudo apt install awscli -y0

      - run:
            name: "Build & upload to S3"
            command: |
                  npm install
                  npm run build
                  ENVS=(
                    '$VUE_APP_HQ_API_HOST|<< parameters.env_hq_api_host >>'
                    '$VUE_APP_HQ_API_KEY|<< parameters.env_hq_api_key >>'
                    '$VUE_APP_GOOGLE_MAPS_KEY|<< parameters.env_google_api_key >>'
                    '$VUE_APP_DATADOG_TOKEN|<< parameters.env_datadog_token >>'
                    '$VUE_APP_DATADOG_SITE|<< parameters.env_datadog_site >>'
                    '$VUE_APP_CCHA_HOST|<< parameters.env_ccha_host >>'
                    '$VUE_APP_SG_WEB|<< parameters.env_sg_web >>'
                    '$VUE_APP_ENV|<< parameters.env >>')
                  for file in dist/app*.js;
                  do
                    for pair in "${ENVS[@]}"; 
                    do
                      IFS="|" read -ra parts <<< "$pair"
                      search="${parts[0]}"
                      replace="${parts[1]}"
                      replace_escaped=$(sed 's/[\/&]/\\&/g' <<< "$replace")
                      # echo "Replacing $search with $replace_escaped"
                      #sed -i '' 's~$search~$replace_escaped~g' "$file"
                      sed -i '' "s/$search/$replace_escaped/g" "$file"
                      # sed -i '' "${d}$search${d}$replace_escaped${d}g" "$file"
                      # awk -v search="$search" -v replace="$replace_escaped" '{ gsub(search, replace); print }' "$file" > "$file.tmp"
                      # mv "$file.tmp" "$file"
                    done
                  done  
                  aws s3 sync dist/ s3://<< parameters.project >>-<< parameters.env >> --delete

      - run:
            name: "Invalidate CloudFront cache"
            command: aws cloudfront create-invalidation --distribution-id << parameters.cloudfront_distribution_id >> --paths "/*"